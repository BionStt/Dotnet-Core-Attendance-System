import JwtService from '@/services/jwt-service'
import decode from 'jwt-decode'

const state = {
    user: {},
    isAuthenticated: !!JwtService.getToken()
}

const getters = {
    currentUser (state) {
        return state.user
    },
    isAuthenticated (state) {
        return state.isAuthenticated
    }
}

const mutations = {
    SET_AUTH (state, data) {
        // decode payload
        const decodedJwt = decode(data.access_token)

        // set up the payload in user state
        state.user = {
            username: decodedJwt['sub'],

            employee_id: decodedJwt['employee_id'],

            // default key name in jwt
            full_name: decodedJwt['full_name'],
            
            // role generated by asp.net
            roles: [
                decodedJwt['http://schemas.microsoft.com/ws/2008/06/identity/claims/role'] 
            ]
        }

        state.isAuthenticated = true
        JwtService.saveToken(data.access_token)
    },
    DESTROY_AUTH (state) {
        state.isAuthenticated = false
        state.user = {}
        JwtService.destroyToken()
    }
}

const actions = {
    LOGIN ({commit}, data) {
        commit('SET_AUTH', data)
    },
    LOGOUT ({commit}) {
        commit('DESTROY_AUTH')
    }
}

export default {
    state,
    actions,
    mutations,
    getters
}
